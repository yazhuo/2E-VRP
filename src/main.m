%% -----------------------------信息提取程序-----------------------------clear all; close all; clc; rand('state', sum(100*clock)); format bank;%----4个文件下的测试样本数目----seq_dataset = [21,18,54,18]; %dataset文件下的4个文件Set2-Set5中测试样例数目%----参数设置----runs        = 30;                 %重复实验次数max_iter    = 500000;             %每次实验最多迭代次数500k%��文件夹内数据总量分别为：21,18,54,18; %文件夹的序号：1-4->Set2-Set5;%----Start----for num_folder = 1:1 %1:4                    %文件夹的序号：1-4分别对应文件夹Set2-Set5;    seq_data = seq_dataset(num_folder);      %第num_folder个文件夹的测试样本总数    nn = 1;                                  %set2中的第2个问题    for seq = nn:nn  %1:seq_data       %----提取文件的仓库、卫星、客户坐标、车辆信息和客户需求----        %coord_dep：仓库的坐标        %coord_sat：卫星（中转站）坐标        %coord_cus：客户的坐标        %fleet：车辆信息，fleet(1,1)为第一层车辆的最大载重量  fleet(1,2)为第一层可使用的车辆数目  fleet(2,1)为第二层车辆的最大载重量  fleet(2,2)为第二层可使用的车辆数目        %demand：客户需求        [coord_dep,coord_sat,coord_cus,fleet,demand] = extractdata(num_folder,seq);    endend% custom_num 客户的个数% sat_num 卫星的个数% m1 第一层车辆数量% m2 第二城车辆数量% K1 第一层车辆的容量% K2 第二层车辆的容量% assign_table(k,j) = 1 表示客户j被分配给卫星k% condition_record 行表示第几个卫星，custom_num = size(coord_cus,1);sat_num = size(coord_sat,1);m1 = fleet(1,2);K1 = fleet(1,1);m2 = fleet(2,2);K2 = fleet(2,1);%-------------------------------------------------------% 1. First Clustering% 将每个客户分配给一个卫星%-------------------------------------------------------DepotSatDist = calDepotSatDist(coord_dep, coord_sat, sat_num);SatCusDist = calSatCusDist(coord_sat, coord_cus, sat_num, custom_num);SatSatDist = calSatSatDist(coord_sat, sat_num);Cus2CusDist = calCus2CusDist(coord_cus, custom_num);assign_table = assignCus2Sat(SatCusDist, sat_num, custom_num, demand, K2, m2);%disp(assign_table);%disp(Cus2CusDist);%disp(SatCusDist);%-------------------------------------------------------% 2. GACVRP% 使用遗传算法解决Ns+1个CVRP问题%-------------------------------------------------------CustomSet = zeros(1,0);sat_demand = zeros(2,1);SatSet = zeros(1, sat_num);%----第二层----for i = 1:sat_num    %整合卫星-客户距离    temp1 = [0 SatCusDist(i,:)];    temp2 = [SatCusDist(i,:)' Cus2CusDist];    distance2 = [temp1;temp2];    %disp(distance(1,1));    %划分卫星客户群    for j = 1:custom_num        if assign_table(i,j) == 1            CustomSet = [CustomSet j];        end    end        %计算每个卫星的货物量    for k = 1:size(CustomSet,2)        sat_demand(i,1) = sat_demand(i,1) + demand(CustomSet(1,k),1);    end    disp('sat_demand');    disp(sat_demand(i,1));    %disp(CustomSet);     fprintf('\nsat %d begin cvrp...\n', i);       [best_length2, best_route2] = cvrp(CustomSet, demand, distance2, K2);    CustomSet = zeros(1,0);    SatSet(1,i) = i;        fprintf('2-layer best_length = \n');    disp(best_length2);    fprintf('2-layer best_route = \n');    disp(best_route2);    end%----第一层----%整合卫星-仓库距离temp1 = [0 DepotSatDist'];temp2 = [DepotSatDist SatSatDist];distance1 = [temp1; temp2];fprintf('\ndepot and sat cvrp...\n');[best_length1, best_route1] = cvrp(SatSet, sat_demand, distance1, K1);fprintf('1-layer best_length = \n');disp(best_length1);fprintf('1-layer best_route = \n');disp(best_route1);